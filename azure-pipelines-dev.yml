# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml



trigger: 
  - dev

pool:
  name: 'ERP_DEV'

jobs:
  - job: check_file
    displayName: Check changed files BE
    steps:
      - task: ChangedFiles@1
        name: CheckChangesBE
        inputs:
          rules: aspnet-core/**
          variable: HasChangedBE
  
      - task: ChangedFiles@1
        name: CheckChangesFE
        inputs:
          rules: angular/**
          variable: HasChangedFE

  - job: DotnetBuild
    dependsOn: check_file
    condition: eq(dependencies.check_file.outputs['CheckChangesBE.HasChangedBE'], 'true')
    steps: 
    - script: |
        export PATH=$PATH:/opt/dotnet3/
        cd aspnet-core/src/ProjectManagement.Migrator
        dotnet3 publish -c Release
        
        zip -r backend_migrator.zip *
      displayName: 'Dotnet Build Migrator'

    - script: |
        cd aspnet-core/src/ProjectManagement.Migrator/bin/Release/netcoreapp3.1/publish/
        zip -r backend_migrator.zip *
      displayName: 'Compress Build Migrator'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'aspnet-core/src/ProjectManagement.Migrator/bin/Release/netcoreapp3.1/publish/backend_migrator.zip'
        ArtifactName: 'dev-dotnet-migrator-project'
        publishLocation: 'Container'
      displayName: 'Publish Artifacts Migrator'

    - script: |
        export PATH=$PATH:/opt/dotnet3/
        cd aspnet-core
        dotnet3 publish -c Release
      displayName: 'Dotnet Build Host'
    
    - script: |
        cd aspnet-core/src/ProjectManagement.Web.Host/bin/Release/netcoreapp3.1/publish/
        zip -r backend_publish.zip *
      displayName: 'Compress Build Host'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'aspnet-core/src/ProjectManagement.Web.Host/bin/Release/netcoreapp3.1/publish/backend_publish.zip'
        ArtifactName: 'dev-dotnet-host-project'
        publishLocation: 'Container'
      displayName: 'Publish Artifacts Host'

  - job: AngularBuild
    dependsOn: check_file
    condition: eq(dependencies.check_file.outputs['CheckChangesFE.HasChangedFE'], 'true')
    steps:
      - script: |
          cd angular/
          export NVM_DIR="$HOME/.nvm" && . "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          nvm use 14.17
          node -v
          echo "=== INSTALL PACKAGE ==="
          npm install --force
        displayName: 'Install Package'
      
      - script: |
          cd angular/
          export NVM_DIR="$HOME/.nvm" && . "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          nvm use 14.17 
          ng build --prod
        displayName: 'Build Frontend'
      
      - script: |
          cd angular/dist
          zip -r frontend_publish.zip *
        displayName: 'Compress Build FE '

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: 'angular/dist/frontend_publish.zip'
          ArtifactName: 'dev-fe-project'
          publishLocation: 'Container'
          FileCopyOptions: 
        displayName: 'Publish Artifacts Frontend'
            
          

